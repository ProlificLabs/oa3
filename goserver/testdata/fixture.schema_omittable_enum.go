// Code generated by oa3 (https://github.com/aarondl/oa3). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.
package oa3gen

import (
	"strings"

	"github.com/aarondl/oa3/support"
	"github.com/aarondl/opt/omit"
)

type OmittableEnum struct {
	NetworkType   omit.Val[EnumRef] `json:"network_type,omitempty"`
	WalletAddress omit.Val[string]  `json:"wallet_address,omitempty"`
}

// validateSchema validates the object and returns
// errors that can be returned to the user.
func (o OmittableEnum) validateSchema() support.Errors {
	var ctx []string
	var ers []error
	var errs support.Errors
	_, _, _ = ctx, ers, errs

	if newErrs := Validate(o.NetworkType.GetOrZero()); newErrs != nil {
		ctx = append(ctx, "network_type")
		errs = support.AddErrsFlatten(errs, strings.Join(ctx, "."), newErrs)
		ctx = ctx[:len(ctx)-1]
	}

	return errs
}
